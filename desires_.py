# -*- coding: utf-8 -*-
"""Desires .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kZ9UbsvztGU3EbLsk-Xf4J6hVHbK1kI8
"""

import streamlit as st
import pandas as pd
import plotly.graph_objects as go
from datetime import datetime

st.set_page_config(page_title="Desire Reflection App", layout="centered")

st.title("💭 Desire Reflection and Clarity Tool")

# --- 1. User Info ---
user_name = st.text_input("👤 What is your name?")

# --- 2. Main Desire ---
main_desire = st.text_input("✨ What is your main desire?")

# --- 3. Sub-Desires ---
st.subheader("🔍 Sub-Desires")
sub_desires = []
sub_outcomes = []
link_types = []

for i in range(1, 4):
    sd = st.text_input(f"Sub-Desire {i}")
    sub_desires.append(sd)
    outcome = st.text_input(f"What do you hope to get from Sub-Desire {i}?")
    sub_outcomes.append(outcome)
    link = st.selectbox(
        f"Is this link to your main desire Real, Spurious, or Unclear?",
        ["Real", "Spurious", "Unclear"],
        key=f"link_{i}"
    )
    link_types.append(link)

# --- 4. Summary Visualization ---
if st.button("🔎 Analyze and Show Summary"):
    if not user_name or not main_desire or any(not sd for sd in sub_desires):
        st.warning("Please fill in all fields before analyzing.")
    else:
        st.subheader("🧠 Summary Chart")

        colors = {"Real": "green", "Spurious": "red", "Unclear": "orange"}

        fig = go.Figure()
        fig.add_trace(go.Scatter(
            x=[2], y=[3], text=[main_desire],
            mode='text+markers', marker=dict(size=20), name='Main Desire'
        ))

        for i, (sd, oc, lt) in enumerate(zip(sub_desires, sub_outcomes, link_types)):
            fig.add_trace(go.Scatter(
                x=[1], y=[2 - i], text=[sd],
                mode='text+markers', marker=dict(color=colors[lt], size=14), name=f'Sub-Desire {i+1}'
            ))
            fig.add_trace(go.Scatter(
                x=[0], y=[2 - i], text=[oc],
                mode='text+markers', marker=dict(color='lightblue', size=10), name=f'Outcome {i+1}'
            ))
            # Connections
            fig.add_shape(type="line", x0=2, y0=3, x1=1, y1=2 - i,
                          line=dict(color=colors[lt], width=2))
            fig.add_shape(type="line", x0=1, y0=2 - i, x1=0, y1=2 - i,
                          line=dict(color='gray', dash='dot'))

        fig.update_layout(showlegend=False,
                          xaxis=dict(visible=False), yaxis=dict(visible=False),
                          height=500, width=700, title=f"Reflection Map for {user_name}")
        st.plotly_chart(fig)

        # --- 5. Save Data ---
        st.subheader("📁 Save Your Reflection")
        data = {
            "Name": user_name,
            "Main Desire": main_desire
        }
        for i in range(3):
            data[f"Sub-Desire {i+1}"] = sub_desires[i]
            data[f"Outcome {i+1}"] = sub_outcomes[i]
            data[f"Link Type {i+1}"] = link_types[i]

        df = pd.DataFrame([data])
        filename = f"desire_reflection_{user_name}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv"
        csv = df.to_csv(index=False).encode('utf-8')
        st.download_button("💾 Download Your Reflection as CSV", csv, filename, "text/csv")